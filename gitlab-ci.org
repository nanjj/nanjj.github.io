#+title: Gitlab的持续集成
#+date: <2019-12-07 六>

Gitlab持续集成采用订阅模式，这和Github不同。

** Github的持续集成
   
   Github的持续集成采用通知机制，需要实现一个Webhook来接收Github的通知。

   如下图所示：

   #+BEGIN_SRC mermaid :file github-ci.png
	 graph LR
		 github[Github]
		 webhook[Webhook]
		 github --通知--> webhook
		 subgraph 持续集成
			 webhook
			 end
   #+END_SRC

   #+RESULTS:
   [[file:github-ci.png]]

   这个Webhook是一个服务，Github得能访问访问到这个服务，事情才能完成。
   而且这个服务的安全也得保证。

   Gitlab不是这么做的。
** Gitlab如何做的

   Gitlaby用订阅的模式来做持续集成。

   #+BEGIN_SRC mermaid :file gitlab-ci.png
	 graph TD
	 gitlab[Gitlab]
	 runner[Gitlab Runner]
	 runner -.订阅.-> gitlab
	 subgraph 持续集成
	 runner
	 end
   #+END_SRC

   #+RESULTS:
   [[file:gitlab-ci.png]]

   这样 =gitlab runner= 可以跑在内网的某台机器，只要该机器http协议能访
   问gitlab就可以。

** Gitlab Runner的行为
   
   =Gitlab Runner= 每3秒访问一下Gitlab看有没有任务，如有任务，扯下来执
   行。如无任务，3秒后见。

   =Gitlab Runner= 后面可以跑docker， kubernetes等。我觉得通过 =Gitlab
   Runner= 的shell模式没准可以跑lxd。

